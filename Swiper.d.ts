import { StyleProp, ViewStyle } from "react-native";

interface SwiperProps {
  animateCardOpacity: boolean;
  animateOverlayLabelsOpacity: boolean;
  backgroundColor: string;
  cardHorizontalMargin: number;
  cardIndex: number;
  cardStyle: number | object;
  cardVerticalMargin: number;
  childrenOnTop: boolean;
  containerStyle: object;
  disableBottomSwipe: boolean;
  disableLeftSwipe: boolean;
  disableRightSwipe: boolean;
  disableTopSwipe: boolean;
  horizontalSwipe: boolean;
  horizontalThreshold: number;
  goBackToPreviousCardOnSwipeBottom: boolean;
  goBackToPreviousCardOnSwipeLeft: boolean;
  goBackToPreviousCardOnSwipeRight: boolean;
  goBackToPreviousCardOnSwipeTop: boolean;
  infinite: boolean;
  inputCardOpacityRangeX: [number, number, number, number, number];
  inputCardOpacityRangeY: [number, number, number, number, number];
  inputOverlayLabelsOpacityRangeX: [number, number, number, number, number];
  inputOverlayLabelsOpacityRangeY: [number, number, number, number, number];
  inputRotationRange: [number, number, number];
  keyExtractor: () => any;
  marginBottom: number;
  marginTop: number;
  onSwiped: (cardIndex: number) => any;
  onSwipedAborted: () => any;
  onSwipedAll: () => any;
  onSwipedBottom: (cardIndex: number) => any;
  onSwipedLeft: (cardIndex: number) => any;
  onSwipedRight: (cardIndex: number) => any;
  onSwipedTop: (cardIndex: number) => any;
  onSwiping: () => any;
  onTapCard: (cardIndex: number) => any;
  onTapCardDeadZone: number;
  outputCardOpacityRangeX: [number, number, number, number, number];
  outputCardOpacityRangeY: [number, number, number, number, number];
  outputOverlayLabelsOpacityRangeX: [number, number, number];
  outputOverlayLabelsOpacityRangeY: [number, number, number];
  outputRotationRange: [string, string, string];
  overlayLabels: object;
  overlayLabelStyle: StyleProp<ViewStyle>;
  overlayLabelWrapperStyle: StyleProp<ViewStyle>;
  overlayOpacityHorizontalThreshold: number;
  overlayOpacityVerticalThreshold: number;
  pointerEvents: string;
  previousCardDefaultPositionX: number;
  previousCardDefaultPositionY: number;
  secondCardZoom: number;
  showSecondCard: boolean;
  stackAnimationFriction: number;
  stackAnimationTension: number;
  stackScale: number;
  stackSeparation: number;
  stackSize: number;
  swipeAnimationDuration: number;
  swipeBackCard: boolean;
  topCardResetAnimationFriction: number;
  topCardResetAnimationTension: number;
  useViewOverflow: boolean;
  verticalSwipe: boolean;
  verticalThreshold: number;
  zoomAnimationDuration: number;
  zoomFriction: number;
}

export class Swiper extends React.Component<SwiperProps> {}
